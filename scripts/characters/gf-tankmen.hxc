import funkin.play.character.SparrowCharacter;
import funkin.play.character.CharacterType;
import funkin.play.PlayState;
import flixel.addons.effects.FlxTrail;
import funkin.graphics.FunkinSprite;
import funkin.play.PlayState;

class GirlfriendTankmenCharacter extends SparrowCharacter
{

  var tankmenBottomL:FunkinSprite;
  var tankmenTopL:FunkinSprite;
  var tankmenBottomR:FunkinSprite;
  var tankmenTopR:FunkinSprite;

  function new()
  {
    super('gf-tankmen');
  }

  function onCreate(event:ScriptEvent)
  {
    super.onCreate(event);

    tankmenBottomL = FunkinSprite.createSparrow(0, 0, "characters/tankmenStickup");
    tankmenBottomL.animation.addByPrefix('idle', "tankman bottom", 24, true, true);
    tankmenBottomL.x = this.x;
    tankmenBottomL.y = this.y;
    tankmenBottomL.zIndex = this.zIndex - 2;
    tankmenBottomL.updateHitbox();
    tankmenBottomL.animation.play('idle', true);

    tankmenTopL = FunkinSprite.createSparrow(0, 0, "characters/tankmenStickup");
    tankmenTopL.animation.addByPrefix('idle', "tankman1 top 2", 24, true, true);
    tankmenTopL.x = this.x;
    tankmenTopL.y = this.y;
    tankmenTopL.zIndex = this.zIndex - 2;
    tankmenTopL.updateHitbox();
    tankmenTopL.animation.play('idle', true);

    tankmenBottomR = FunkinSprite.createSparrow(0, 0, "characters/tankmenStickup");
    tankmenBottomR.animation.addByPrefix('idle', "tankman bottom", 24, true, false);
    tankmenBottomR.x = this.x;
    tankmenBottomR.y = this.y;
    tankmenBottomR.zIndex = this.zIndex - 2;
    tankmenBottomR.updateHitbox();
    tankmenBottomR.animation.play('idle', true);

    tankmenTopR = FunkinSprite.createSparrow(0, 0, "characters/tankmenStickup");
    tankmenTopR.animation.addByPrefix('idle', "tankman top", 24, true, false);
    tankmenTopR.x = this.x;
    tankmenTopR.y = this.y;
    tankmenTopR.zIndex = this.zIndex - 2;
    tankmenTopR.updateHitbox();
    tankmenTopR.animation.play('idle', true);

  }

  override function onAdd()
  {
    if (!debug && this.characterType == CharacterType.DAD)
    {
      // If Girlfriend is the opponent, set her position to the stage's assigned Girlfriend position,
      // while maintaining her status as an opponent. This allows the Girlfriend character to use a shared
      // character file without weird offsets.

      var pos:FlxPoint = PlayState.instance.currentStage.getGirlfriendPosition();

      this.originalPosition.x = pos.x - this.characterOrigin.x;
      this.originalPosition.y = pos.y - this.characterOrigin.y;

      this.resetPosition();
    }
  }

  var refershedLol:Bool = false;

  function onUpdate(event:UpdateScriptEvent)
  {
    super.onUpdate(event);

    // refreshes just for the zIndex shit!
    if (!refershedLol)
    {

      tankmenBottomL.x = this.x + -87;
      tankmenBottomL.y = this.y + 217;
      tankmenBottomL.zIndex = this.zIndex - 1;
      PlayState.instance.currentStage.add(tankmenBottomL);

      tankmenTopL.x = this.x + -50-50;
      tankmenTopL.y = this.y + 67 + 35;
      tankmenTopL.zIndex = this.zIndex + 1;
      PlayState.instance.currentStage.add(tankmenTopL);

      tankmenBottomR.x = this.x + 115 + 392.25;
      tankmenBottomR.y = this.y + 217;
      tankmenBottomR.zIndex = this.zIndex - 1;
      PlayState.instance.currentStage.add(tankmenBottomR);

      tankmenTopR.x = this.x + 425;
      tankmenTopR.y = this.y + 67 + 35;
      tankmenTopR.zIndex = this.zIndex + 1;
      PlayState.instance.currentStage.add(tankmenTopR);

      PlayState.instance.currentStage.refresh();
      refershedLol = true;
    }  
  }


  override function dance(force:Bool)
  {
    // Fix animation glitches with Week 3.
    // Wait for 'hairBlow' to play, preventing dancing from interrupting it.
    if (!force && ['hairBlow'].contains(getCurrentAnimation())) return;
    // Wait for 'hairFall' to finish, preventing dancing from interrupting it.
    if (!force && ['hairFall'].contains(getCurrentAnimation()) && !isAnimationFinished()) return;

    super.dance(force);

    if (tankmenBottomL != null)
    {
      tankmenBottomL.animation.play('idle', true);
    }

    if (tankmenTopL != null)
    {
      tankmenTopL.animation.play('idle', true);
    }

    if (tankmenBottomR != null)
    {
      tankmenBottomR.animation.play('idle', true);
    }

    if (tankmenTopR != null)
    {
      tankmenTopR.animation.play('idle', true);
    }
  }
}
