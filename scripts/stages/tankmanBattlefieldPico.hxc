import flixel.FlxG;
import flixel.math.FlxAngle;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import funkin.graphics.shaders.DropShadowShader;
import funkin.play.character.CharacterType;
import openfl.display.BitmapData;
import flixel.graphics.FlxGraphic;
import funkin.graphics.shaders.AdjustColorShader;

class TankmanBattlefieldPicoStage extends Stage
{
  var adjustColor:AdjustColorShader;

  function new()
  {
    super('tankmanBattlefieldPico');
    
  }

  function onCreate(event:ScriptEvent):Void
  {
    super.onCreate(event);
  }

  var tankmanRim:DropShadowShader;

  public function onGameOver(event:ScriptEvent)
  {
    super.onGameOver(event);
    getBoyfriend().shader = null;
  }

  public function buildStage()
  {
    super.buildStage();

    adjustColor = new AdjustColorShader();

    adjustColor.hue = 25;
    adjustColor.saturation = -25;
    adjustColor.brightness = -55;
    adjustColor.contrast = 20;

    var tankmen = ['tankmanAudience0', 'tankmanAudience2', 'tankmanAudience4', 'tankmanAudience5'];

    for (i in tankmen)
    {
      if (FlxG.random.bool(80))
      {
        getNamedProp(i).shader = adjustColor;
      }
      else
      {
        getNamedProp(i).visible = false;
      }
    }
  }

  override function addCharacter(character:BaseCharacter, charType:CharacterType):Void
  {
    // Apply the shader automatically to each character as it gets added.
    super.addCharacter(character, charType);
    trace('Applied stage shader to ' + character.characterName);

    var rim = new DropShadowShader();
    rim.setAdjustColor(-46, -38, -25, -20);
    rim.color = 0xFF949E29;
    character.shader = rim;
    rim.strength = 1.0;
    rim.attachedSprite = character;

    switch (charType)
    {
      case CharacterType.BF:
        rim.angle = 90;

        character.animation.onFrameChange.add(function() {
          if (getBoyfriend() != null)
          {
            rim.updateFrameInfo(getBoyfriend().frame);
          }
        });

      case CharacterType.GF:
        rim.angle = 90;

        character.animation.onFrameChange.add(function() {
          rim.updateFrameInfo(getGirlfriend().frame);
        });

        if (getGirlfriend().characterId == 'gf-tankmen')
        {
          rim.loadAltMask('assets/week7/images/erect/masks/gfTankmen_mask.png');
          rim.maskThreshold = 0.4;
          rim.useAltMask = true;
        }

        if (getGirlfriend().characterId == 'otis-speaker')
        {
          getNamedProp('tankBricks').setPosition(445, 774);
        }

      case CharacterType.DAD:
        rim.angle = 135;
        rim.threshold = 0.3;

        character.animation.onFrameChange.add(function() {
          rim.updateFrameInfo(getDad().frame);
        });

        if (getDad().characterId == 'tankman-bloody')
        {
          rim.loadAltMask('assets/week7/images/erect/masks/tankmanCaptainBloody_mask.png');
          rim.maskThreshold = 1;
          rim.useAltMask = false;
        }

        // need to save this for later for when the mask is needed
        tankmanRim = rim;

      default:
    }
  }

  /**
   * Called when the chart hits a song event.
   */
  public override function onSongEvent(scriptEvent:SongEventScriptEvent)
  {
    super.onSongEvent(scriptEvent);

    if (scriptEvent.eventData.eventKind == "EnableMask" && tankmanRim != null)
    {
      tankmanRim.useAltMask = true;
    }
  }

  function onUpdate(event:UpdateScriptEvent):Void
  {
    super.onUpdate(event);
  }

  function onBeatHit(event:SongTimeScriptEvent):Void
  {
    super.onBeatHit(event);

    if (FlxG.random.bool(2))
    {
      getNamedProp('sniper').playAnimation('sip', false, true);
    }
  }

  function onSongRetry(event:ScriptEvent)
  {
    super.onSongRetry(event);

    if (tankmanRim != null)
    {
      tankmanRim.useAltMask = false;
    }

    if (getGirlfriend().characterId == 'otis-speaker')
    {
      getNamedProp('tankBricks').setPosition(445, 774);
    }
  }
}
