import funkin.ui.title.TitleState;
import flixel.FlxCamera;
import flixel.math.FlxMath;
import flixel.FlxSprite;
import flixel.math.FlxAngle;
import flixel.math.FlxPoint;
import flixel.text.FlxText;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxSpriteUtil;
import flixel.util.FlxTimer;
import flixel.util.FlxSort;
import funkin.util.Constants;
import funkin.graphics.adobeanimate.FlxAtlasSprite;
import funkin.graphics.FunkinSprite;
import funkin.ui.freeplay.charselect.PlayableCharacter;
import funkin.ui.MusicBeatSubState;
import funkin.graphics.shaders.AdjustColorShader;
import flixel.addons.display.FlxTiledSprite;
import flixel.addons.display.FlxBackdrop;
import funkin.PlayerSettings;
import funkin.modding.module.Module;
import funkin.modding.events.ScriptEvent;
import funkin.modding.base.ScriptedMusicBeatSubState;
import funkin.modding.base.ScriptedFlxRuntimeShader;
import funkin.modding.base.ScriptedMusicBeatState;
import funkin.util.ReflectUtil;
import flixel.FlxG;
import funkin.util.WindowUtil;
import funkin.Preferences;
import flixel.addons.effects.FlxTrail;
import funkin.effects.FunkTrail;
import flixel.group.FlxTypedGroup;
import funkin.modding.base.ScriptedFlxSpriteGroup;
import funkin.ui.freeplay.BGScrollingText;
import funkin.audio.visualize.SpectogramSprite;
import funkin.graphics.shaders.ColorSwap;
import funkin.graphics.shaders.LeftMaskShader;
import funkin.graphics.FunkinSprite;
import funkin.ui.MusicBeatState;
import funkin.graphics.shaders.TitleOutline;
import funkin.audio.FunkinSound;
import funkin.ui.AtlasText;
import funkin.ui.FullScreenScaleMode;

import flixel.FlxSprite;
import flixel.input.gamepad.FlxGamepad;
import funkin.ui.FullScreenScaleMode;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxColor;
import flixel.util.FlxTimer;
import funkin.util.HapticUtil;
import funkin.audio.visualize.SpectogramSprite;
import funkin.graphics.shaders.ColorSwap;
import funkin.graphics.shaders.LeftMaskShader;
import funkin.graphics.FunkinSprite;
import funkin.ui.MusicBeatState;
import funkin.graphics.shaders.TitleOutline;
import funkin.audio.FunkinSound;
import funkin.ui.AtlasText;
import openfl.Assets;
import openfl.display.Sprite;
import openfl.events.AsyncErrorEvent;
import funkin.ui.mainmenu.MainMenuState;
import openfl.events.MouseEvent;
import openfl.events.NetStatusEvent;
import openfl.media.Video;
import openfl.net.NetStream;
import funkin.input.Controls;
import funkin.ui.freeplay.FreeplayState;
import funkin.save.Save;
import funkin.util.TouchUtil;
import funkin.util.SwipeUtil;

class LudumDareTitleScreen extends Module
{  
  var finished:Bool = false;

  var backer:FlxSprite;
  var background:FlxSprite;
  var backerY:float;
  var _timer:Float = 0;
  var transitioning:bool = false;
  var scrollingText:StoryScrollingText = null;
  var bgText:FlxTypedGroup;
  var logo:FlxSprite;
  var outlineShaderShit:TitleOutline;

  var gf:FlxSprite;
  var danceLeft:Bool = false;
  var titleHint:FlxSprite;
  var maskShader = new LeftMaskShader();
  var swagShader:ColorSwap;

  var evilTrail:FunkTrail;

  public function new()
  {
    super('LudumDareTitleScreen');
  }

  override function onStateChangeEnd(event)
  {
    super.onStateChangeEnd(event);
    finished = false;
  }
 
  function generateBGtext()
  {
    bgText.killMembers();
    for (i in 0...(Math.round((FlxG.height / 64) + 1)))
    {
      var words:String;
      switch(i)
      {
        case 0:
              words = 'The Full Ass Game ';
        case 1:
              words = 'Cartoon Rythm Gaming Excellence ';
        case 2:
              words = 'RAW, LYRICAL, INTENSE ';
        case 3:
              words = 'In Collabaration with Newgrounds ';
        case 4:
              words = 'Think you got what it takes? ';
        case 5:
              words = 'A sensation unlike any other ';
        case 6:
              words = 'A thirst unquenchable ';
        case 7:
              words = 'An army of dickheads who need to be put in their place ';
        case 8:
              words = 'HOT GIRLFREIND, MEAN EVIL DAD, AND THE POWER OF MUSIC';
        case 9:
              words = "LUDUM DARE 47 - 'STUCK IN A LOOP' ";
        case 10:
              words = 'PRETTY DOPE ASS GAME';
              //words = "...WOULD YOU? RANKED #1 ALBUM WORLDWIDE!!! ";  
        default:
              words = "Friday Night Funkin'";
      }

      var scrollingText = new BGScrollingText(0, 16 + i * 64, words, FlxG.width, false, 64);
      scrollingText.speed = 1.5;
      scrollingText.alpha = 0.15;
      scrollingText.shader = swagShader.shader;
      scrollingText.color = 0xFF7575FF;
      if (FlxMath.isOdd(i)) scrollingText.alpha = 0.1;
      if (FlxMath.isOdd(i)) scrollingText.speed = -1.5;
      scrollingText.zIndex = -100;
      scrollingText.blend = 12;
      FlxG.state.add(scrollingText);
      bgText.add(scrollingText);
    }
  }

  override function onBeatHit(event:SongTimeScriptEvent)
  {
      super.onBeatHit(event);

      if (gf != null)
      {
            danceLeft = !danceLeft;

            if (gf != null && gf.animation != null)
                  {
                  if (danceLeft) gf.animation.play('danceRight');
                  else
                  gf.animation.play('danceLeft');
                  }
      }
  }

  override function onUpdate(event:UpdateScriptEvent)
  {
	super.onUpdate(event);

    if (finished == false && ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.title.TitleState")
    {
      if (FlxG.state.skippedIntro == true)
      {
        finished = true;

        swagShader = new ColorSwap();

        background = new FlxSprite(-27, 193).loadGraphic(Paths.image('titleBanner'));
        background.screenCenter();
        background.scale.x = 0.75;
        background.scale.y = 0.75;
        background.updateHitbox();
        background.x = FlxG.width/2 - background.width + 500;
	  background.antialiasing = true;
	  background.zIndex = -1000;
        background.alpha = 0.4;
        bgText =  new FlxTypedGroup();

        FlxG.state.add(background);
        //FlxG.state.add(bgText);
        bgText.zIndex = -1000;
        generateBGtext();
        
        FlxG.state.gfDance.visible = false;
        FlxG.state.logoBl.visible = false;
        FlxG.state.titleText.visible = false;

        logo = new FlxSprite(-150 + (FullScreenScaleMode.gameCutoutSize.x / 2.5), -100);
        logo.frames = Paths.getSparrowAtlas('logoBumpin');
        logo.animation.addByPrefix('bump', 'logo bumpin', 24);
        logo.animation.play('bump');
        logo.shader = swagShader.shader;
        logo.blend = 12;
        logo.updateHitbox();

        outlineShaderShit = new TitleOutline();

        gf = new FlxSprite((FlxG.width * 0.4) + FullScreenScaleMode.gameCutoutSize.x / 2.5, FlxG.height * 0.07);
        gf.frames = Paths.getSparrowAtlas('gfDanceTitle');
        gf.animation.addByIndices('danceLeft', 'gfDance', [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "", 24, false);
        gf.animation.addByIndices('danceRight', 'gfDance', [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "", 24, false);
        gf.blend = 12;

        // maskShader.swagSprX = gf.x;
        // maskShader.swagMaskX = gf.x + 200;
        // maskShader.frameUV = gf.frame.uv;
        // gf.shader = maskShader;

        gf.shader = swagShader.shader;

        // gf.shader = new TitleOutline();

        if (FlxG.onMobile)
        {
                // shift it a bit more to the left on mobile!!
                titleHint = new FlxSprite(50 + (FullScreenScaleMode.gameCutoutSize.x / 2), FlxG.height * 0.8);
                titleHint.frames = Paths.getSparrowAtlas('titleEnter_mobile');
        }
        else
        {
                titleHint = new FlxSprite(100 + (FullScreenScaleMode.gameCutoutSize.x / 2), FlxG.height * 0.8);
                titleHint.frames = Paths.getSparrowAtlas('titleEnter');
        }
        titleHint.animation.addByPrefix('idle', "Press Enter to Begin", 24);
        titleHint.animation.addByPrefix('press', "ENTER PRESSED", 24);
        titleHint.animation.play('idle');
        titleHint.updateHitbox();
        titleHint.shader = swagShader.shader;
        titleHint.blend = 12;
        // titleHint.screenCenter(X);
        FlxG.state.add(logo);
        FlxG.state.add(gf);
        FlxG.state.add(titleHint);
      }

    }

      if (swagShader != null && ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.title.TitleState")
      {
            //swagShader.update(event.elapsed * 0.1);
            if (Controls.UI_LEFT || SwipeUtil.justSwipedLeft) swagShader.update(-event.elapsed * 0.1);
            if (Controls.UI_RIGHT || SwipeUtil.justSwipedRight) swagShader.update(event.elapsed * 0.1);

            if (FlxG.onMobile)
            {
                  swagShader.update(-event.elapsed * 0.1);
                  swagShader.update(event.elapsed * 0.1);
            }
            else
            {
                  if (PlayerSettings.player1.controls.UI_LEFT_P) swagShader.update(-event.elapsed * 0.1);
                  if (PlayerSettings.player1.controls.UI_RIGHT_P) swagShader.update(event.elapsed * 0.1);
            }

            if (PlayerSettings.player1.controls.FREEPLAY_CHAR_SELECT)
            {
                  //FlxG.state.destroy();
                  FlxG.switchState(() -> ScriptedMusicBeatState.init('PixelMap'));
            }
      }

    if (FlxG.onMobile == false && FlxG.onMobile == true && ReflectUtil.getClassNameOf(FlxG.state) == "funkin.ui.title.TitleState")
    {
        FlxG.mouse.visible = false;

        if (finished == false && FlxG.state.skippedIntro)
        {
            if(FlxG.state.logo != null && FlxG.state.gf != null && FlxG.state.titleHint != null)
            {

		background = new FlxSprite(-27, 193).loadGraphic(Paths.image('stageback'));
                background.screenCenter();
		background.antialiasing = true;
		background.zIndex = -1000;
                background.alpha = 0.75;

                FlxG.state.add(background);


        	backer = new FlxSprite(-27, 193).loadGraphic(Paths.image('OLdLOgoHQ'));
		backer.scale.x = .45;
		backer.scale.y = .45;
                backer.screenCenter();
		backer.antialiasing = true;
		backer.shader = FlxG.state.swagShader.shader;
		backerY = backer.y;
		backer.zIndex = 100000;


		evilTrail = new FunkTrail(backer, null, 20, 2, 1, 0.075);
		evilTrail.color = 0x000000;
		evilTrail.shader = FlxG.state.swagShader.shader;
		//evilTrail.zIndex = backer.zIndex + 10;
		evilTrail.zIndex = 190;
		FlxG.state.add(evilTrail);
                FlxG.state.add(backer);

                FlxG.state.titleHint.x = 126;
                FlxG.state.titleHint.y = 605;

                FlxG.state.gf.visible = false;
                FlxG.state.logo.visible = false;

                finished = true;

                //FlxG.state.titleHint.destroy();
                //FlxG.state.add(FlxG.state.titleHint);

            }
        }
	
	if (backer != null && FlxG.state.transitioning == false)
	{
		_timer += event.elapsed;
		backer.y = backerY + (Math.sin(_timer * 5)*40)-50;
	}

        if (FlxG.state.transitioning == true)
        {
                _timer += event.elapsed;
                backer.y = backer.y - (_timer - 7);
        }
    }
  }
}